global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private
	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://ssl-config.mozilla.org/#server=haproxy&server-version=1.8.8&config=intermediate
	ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256

	ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

	# curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam.pem
	ssl-dh-param-file /etc/ssl/ffdhe4096.pem
        tune.ssl.default-dh-param 4096

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

{{ haproxyUserLists }}

frontend http
  bind :80
  bind :::80
  redirect scheme https code 301 if !{ ssl_fc }

frontend https
  bind :443 ssl crt /etc/ssl/private alpn http/1.1,h2
  bind :::443 ssl crt /etc/ssl/private alpn http/1.1,h2
  mode http
  option httpclose
  option forwardfor

  {{ haproxyACLs }}

  reqadd X-Forwarded-Proto:\ https
  reqadd X-Forwarded-Port:\ 443
  {{ haproxyAddHeaders }}


backend stats_auth
  stats enable
  acl AUTH       http_auth(stats-auth)
  acl AUTH_ADMIN http_auth_group(stats-auth) admin
  stats http-request auth unless AUTH
  stats admin if AUTH_ADMIN
 
{{ haproxyBackends }}
